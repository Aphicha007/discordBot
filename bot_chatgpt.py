#Bot‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÅ‡∏•‡∏∞‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö

import discord
from discord.ext import commands
from dotenv import load_dotenv
from openai import AsyncOpenAI
import os
import asyncio
import random
import re
from sever import server_on

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå .env ‡πÄ‡∏ä‡πà‡∏ô Token ‡πÅ‡∏•‡∏∞ API Key ‡∏ï‡πà‡∏≤‡∏á ‡πÜ
load_dotenv()

# ‡∏î‡∏∂‡∏á Token ‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó‡∏à‡∏≤‡∏Å .env
bot_token = os.getenv('DISCORD_BOT_TOKEN_CHATGPT')
openai_api_key = os.getenv('OPENAI_API_KEY')

# ‡∏™‡∏£‡πâ‡∏≤‡∏á OpenAI Client
client = AsyncOpenAI(api_key=openai_api_key)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏ô‡∏™‡πÅ‡∏ï‡∏ô‡∏ã‡πå‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó Discord
intents = discord.Intents.all()
intents.members = True
intents.message_content = True
bot = commands.Bot(command_prefix='!', intents=intents)

# Channel ID ‡∏Ç‡∏≠‡∏á‡∏´‡πâ‡∏≠‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "!‡∏ö‡∏≠‡∏ó"
SPECIAL_CHANNEL_ID = 1277250317670678529

# ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á Channel IDs ‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡πÇ‡∏î‡∏¢‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "!‡∏ö‡∏≠‡∏ó"
ALLOWED_CHANNEL_IDS =[
    1276815482569359362,
    1276815598432813078,
    1276816160171753532,
    1276816318913314846,
    1276816482205962240,
    1276816567107326003,
    1276816792236462111,
    1276817099704242229,
    1276817650005053541,
    1276817722868629514,
    1276817799385321473,
    1276818087122964481,
    1276818317407158370,
    1276818448231567361,
    1276818559066181663,
    1276820268345458731,
    1276820442866384998,
    1276820551360315413,
    1276820658994544702,
    1276820766666788925,
    1276820849566945395,
    1276820966562992138,
    1276821034808508427,
    1276821124315090985,
    1276821736553320458,
    1276822486817701958,
    1276822589062385765,
    1276822732000071733,
    1276822805471563846,
    1276822875378155611,
    1276822932609568851,
    1276823035554435073,
    1276823099643396176,
    1276823190748008479,
    1276823379449741333,
    1276823522030649418,
    1276823837815865365,
    1276823989993340949,
    1276824124995534913,
    1276824278372843602,
    1276825442548187157,
    1276825600358613012,
    1276825732785373237,
    1276823755779473409,
    1276823832748883980,
    1276823921928437770,
    1276824076761038869,
    1276824156947611759,
    1276824218855669826,
    1276824328629125162,
    1276824408861966419,
    1276824486737350676,
    1276826172940091463,
    1276826264015077457,
    1276826171954298931,
    1276826354087624744,
    1276826367870369865,
    1276826815125782612,
    1276826891470503956,
    1276826898529517590,
    1276826978582003722,
    1276827005953773578,
    1276827085549342730
]

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ü‡∏•‡πå PDF ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
PDF_FOLDER_PATH = '‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô'  # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

# ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏≤‡∏Å‡∏´‡∏•‡∏≤‡∏¢
status_messages = [
    "‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡∏¥‡∏î... üòä",
    "‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö... üòå",
    "‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•... üí≠",
    "‡∏£‡∏≠‡πÅ‡∏õ‡πä‡∏ö‡∏ô‡∏∞‡∏Ñ‡∏∞ ‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡πÉ‡∏´‡πâ‡∏Ñ‡πà‡∏∞... ü§ó"
]

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
@bot.event
async def on_ready():
    print(f"Logged in as {bot.user.name}")
    print("‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏∞!")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á
@bot.event
async def on_message(message):
    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if message.channel.id == SPECIAL_CHANNEL_ID:
        command_text = message.content.strip()  # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á !‡∏ö‡∏≠‡∏ó
    elif message.channel.id in ALLOWED_CHANNEL_IDS and message.content.startswith('!‡∏ö‡∏≠‡∏ó'):
        command_text = message.content[len('!‡∏ö‡∏≠‡∏ó'):].strip()  # ‡∏ï‡∏±‡∏î !‡∏ö‡∏≠‡∏ó ‡∏≠‡∏≠‡∏Å
    else:
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ö‡∏≠‡∏ó‡πÄ‡∏≠‡∏á
    if message.author == bot.user:
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ
    if re.search(r'‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∞‡πÑ‡∏£|‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ|‡πÇ‡∏Å‡πÇ‡∏Å‡πâ', command_text):
        await message.channel.send("‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡πÑ‡∏á‡∏Ñ‡∏∞ ‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡∏π‡∏Ñ‡∏∑‡∏≠‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡∏Ñ‡πà‡∏∞ üòä")
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
    print(f"Received message: {command_text}")  # Debug
    schedule_requests = re.findall(r'(‡∏°\.\d|‡∏õ‡∏ß‡∏ä\.\d)/(\d+)', command_text)
    print(f"Schedule requests found: {schedule_requests}")  # Debug

    if schedule_requests:
        for grade, room in schedule_requests:
            print(f"Request received for grade: {grade}, room: {room}")  # Debug
            try:
                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ‡πÅ‡∏•‡∏∞‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô
                valid = False
                if grade in ["‡∏°.1", "‡∏°.2", "‡∏°.3"] and 1 <= int(room) <= 12:
                    valid = True
                elif grade in ["‡∏°.4", "‡∏°.5", "‡∏°.6"] and 1 <= int(room) <= 7:
                    valid = True
                elif grade in ["‡∏õ‡∏ß‡∏ä.1", "‡∏õ‡∏ß‡∏ä.2", "‡∏õ‡∏ß‡∏ä.3"] and 1 <= int(room) <= 2:
                    valid = True

                if valid:
                    # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡πÄ‡∏ä‡πà‡∏ô "‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô_‡∏°6_1.pdf"
                    grade_file_name = grade.replace('.', '')  # ‡πÄ‡∏≠‡∏≤‡∏à‡∏∏‡∏î‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠ ‡πÄ‡∏ä‡πà‡∏ô ‡∏°.6 -> ‡∏°6
                    file_name = f'‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô_{grade_file_name}_{room}.pdf'
                    pdf_path = os.path.join(PDF_FOLDER_PATH, file_name)
                    print(f"Checking file path: {pdf_path}")  # Debug

                    if os.path.isfile(pdf_path):
                        # ‡∏™‡πà‡∏á‡πÑ‡∏ü‡∏•‡πå PDF ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á
                        await message.channel.send(f"‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏Ç‡∏≠‡∏á {grade}/{room}:", file=discord.File(pdf_path))
                        print(f"File sent: {pdf_path}")  # Debug
                    else:
                        await message.channel.send(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {grade}/{room}‡∏Ñ‡πà‡∏∞.")
                        print(f"File not found: {pdf_path}")  # Debug
                else:
                    await message.channel.send(f"‡∏´‡πâ‡∏≠‡∏á {grade}/{room} ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏∞.")
                    print(f"Invalid room: {grade}/{room}")  # Debug

            except Exception as e:
                await message.channel.send("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Ç‡∏ì‡∏∞‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤ ‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÉ‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏Ñ‡πà‡∏∞.")
                print(f"Error sending PDF: {e}")

        return

    # ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
    typing_message = random.choice(status_messages)

    # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
    typing_indicator = asyncio.create_task(message.channel.send(typing_message))

    try:
        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á OpenAI ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
        response = await client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡πá‡∏ô‡∏ö‡∏≠‡∏ó‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å ‡∏Å‡∏ß‡∏ô‡πÜ ‡∏™‡∏∏‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏¥‡∏ï‡∏£‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏ô‡∏ó‡∏ô‡∏≤‡πÉ‡∏ô Discord."},
                {"role": "user", "content": command_text}
            ]
        )

        reply = response.choices[0].message.content

        # ‡∏õ‡∏£‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ö‡∏≠‡∏ó‡∏ï‡∏≠‡∏ö‡πÉ‡∏ô‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏´‡∏ç‡∏¥‡∏á
        reply = re.sub(r'‡∏Ñ‡πà‡∏∞', reply) 
        
        # ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å typing indicator ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        typing_indicator.cancel()

        # ‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏≠‡∏á
        await message.channel.send(reply)
        print(f"OpenAI response sent: {reply}")  # Debug

    except Exception as e:
        # ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å typing indicator ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
        typing_indicator.cancel()
        await message.channel.send(f"‡∏Ç‡∏≠‡πÇ‡∏ó‡∏©‡∏Ñ‡πà‡∏∞ ‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: {e}")
        print(f"Error handling question from user {message.author.id}: {e}")

    # ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
    await bot.process_commands(message)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
@bot.event
async def on_error(event, *args, **kwargs):
    with open('bot_error.log', 'a', encoding='utf-8') as f:
        if event == 'on_message':
            f.write(f'Unhandled message: {args[0]}\n')
        else:
            raise

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
@bot.command(name='check')
async def check(ctx):
    await ctx.send("‡∏ô‡πâ‡∏≠‡∏á‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ñ‡πà‡∏∞! üåü")


server_on()

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó‡∏î‡πâ‡∏ß‡∏¢ Token ‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏ß‡πâ
bot.run(bot_token)
